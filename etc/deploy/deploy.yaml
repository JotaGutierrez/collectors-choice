---
  - hosts: webserver
    tasks:
    - name: Get release timestamp
      set_fact:
        timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"
    - name: Clone github repository
      git:
        repo: "{{ repository }}"
        dest: /tmp/cc
        clone: yes
        update: yes
      delegate_to: localhost

    - name: install node modules
      shell:
        cmd: yarn install
        chdir: /tmp/cc/src/App/UI/Next
      delegate_to: localhost

    - name: Configure env variables
      shell:
        cmd: echo "DB_URI={{ db_uri }}" > ./.env.local
        chdir: /tmp/cc/src/App/UI/Next
      delegate_to: localhost

    - name: Build production app
      shell:
        cmd: yarn build
        chdir: /tmp/cc/src/App/UI/Next
      delegate_to: localhost

    - name: Remove git dir
      shell:
        cmd: rm -rf .git
        chdir: /tmp/cc
      delegate_to: localhost

    - name: Packing application
      archive:
        path: /tmp/cc
        dest: /tmp/cc.tar.gz
        format: gz
        remove: yes
      delegate_to: localhost

    - name: Copying file
      copy:
        src: /tmp/cc.tar.gz
        dest: /tmp

    - name: Unarchive package
      unarchive:
        src: /tmp/cc.tar.gz
        dest: /tmp

    - name: Copy app to target
      copy:
        src: /tmp/cc/
        dest: "{{ target_dir }}/releases/{{ timestamp }}"
        remote_src: true
      register: log



    - name: Link release
      file:
        src: "{{ target_dir }}/releases/{{ timestamp }}"
        path: "{{ target_dir }}/current"
        state: link
        force: yes
        follow: false

    - name: Remove remote package
      shell:
        cmd: rm -rf cc*
        chdir: /tmp

    - name: restart pm2
      shell:
        cmd: pm2 restart "Collectors Choice"

    - name: Remove local files
      shell:
        cmd: rm -rf cc*
        chdir: /tmp
      delegate_to: localhost

    - name: Find all directories in releases folder
      find:
        paths: "{{ target_dir }}/releases"
        file_type: directory
      register: dirs

    - name: Keep last release
      file:
        path: "{{ item.path }}"
        state: absent
      with_items:
        - "{{ (dirs.files | sort(attribute='ctime'))[:-1] }}"